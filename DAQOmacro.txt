Sub MacroCheck()
    Dim testMessage As String
    testMessage = "Hello World!"
    MsgBox (testMessage)
End Sub

Sub DQAnalysis()
    Worksheets("DQ Analysis").Activate
    
    Cells(1, 1).Value = "DAQO (Ticker: DQ)"
    
    'Create a header row
    Cells(3, 1).Value = "Year"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"
    
    Worksheets("2018").Activate
    
    'set initial volume to zero
    totalVolume = 0
    'establish number of rows to loop over
    rowStart = 2
    ' DELETE rowEnd = 3013
    ' rowEnd code taken from https:stackoverflow.com/questions/180088729/row-count-where-data-exists
    rowEnd = Cells(Rows.Count, "A").End(xlUp).Row
    
    Dim startingPrice As Double
    Dim endingPrice As Double
    
    
    
    
    'loop over all rows
    For i = rowStart To rowEnd
    
        'increase totalVolume if ticker is "DQ"
        If Cells(i, 1).Value = "DQ" Then
            totalVolume = totalVolume + Cells(i, 8).Value
        End If
        
        'set starting price
        If Cells(i, 1).Value = "DQ" And Cells(i - 1, 1).Value <> "DQ" Then
            startingPrice = Cells(i, 6).Value
        End If
        
        'set ending price
        If Cells(i, 1).Value = "DQ" And Cells(i + 1, 1).Value <> "DQ" Then
            endingPrice = Cells(i, 6).Value
        End If
        
    Next i
    
    Worksheets("DQ Analysis").Activate
    Cells(4, 1).Value = 2018
    Cells(4, 2).Value = totalVolume
    Cells(4, 3).Value = endingPrice / startingPrice - 1
    
    
End Sub

Sub AllStocksAnalysis()

    Worksheets("All Stocks Analysis").Activate
   
    Cells(1, 1).Value = "All Stocks (2018)"
        'Create a header row
    Cells(3, 1).Value = "Ticker"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"
        
    Dim startingPrice As Single
    Dim endingPrice As Single
    Dim tickers(11) As String
    tickers(0) = "AY"
    tickers(1) = "CSIQ"
    tickers(2) = "DQ"
    tickers(3) = "ENPH"
    tickers(4) = "FSLR"
    tickers(5) = "HASI"
    tickers(6) = "JKS"
    tickers(7) = "RUN"
    tickers(8) = "SEDG"
    tickers(9) = "SPWR"
    tickers(10) = "TERP"
    tickers(11) = "VSLR"
    
    Worksheets("2018").Activate
    
    'establish number of rows to loop over
    rowStart = 2
    ' DELETE rowEnd = 3013
    ' rowEnd code taken from https:stackoverflow.com/questions/180088729/row-count-where-data-exists
    rowEnd = Cells(Rows.Count, "A").End(xlUp).Row
    
    For i = 0 To 11
    
        ticker = tickers(i)
        totalVolume = 0
        Worksheets("2018").Activate
        For j = rowStart To rowEnd
            
            'increase totalVolume
            If Cells(j, 1).Value = ticker Then
                totalVolume = totalVolume + Cells(j, 8).Value
            End If
            
            'set starting price
            If Cells(j, 1).Value = ticker And Cells(j - 1, 1).Value <> ticker Then
                startingPrice = Cells(j, 6).Value
            End If
            
            'set ending price
            If Cells(j, 1).Value = ticker And Cells(j + 1, 1).Value <> ticker Then
                endingPrice = Cells(j, 6).Value
            End If
        
        Next j
    'output results
        Worksheets("All Stocks Analysis").Activate
        Cells(4 + i, 1).Value = ticker
        Cells(4 + i, 2).Value = totalVolume
        Cells(4 + i, 3).Value = endingPrice / startingPrice - 1
        
    Next i
     
End Sub

Sub formatAllStocksAnalysisTable()
    'Formatting
    Worksheets("All Stocks Analysis").Activate
    Range("A3:C3").Font.Bold = True
    Range("A3:C3").Font.Size = 18
    Range("A3:C3").Font.FontStyle = "Helvetica"
    Range("A3:C3").Interior.Color = RGB(100, 0, 100)
    Range("A3:C3").Borders(xlEdgeBottom).LineStyle = xlContinuous
    Range("B4:B15").NumberFormat = "#,##0"
    Range("C4:C15").NumberFormat = "0.00%"
    Columns("B").AutoFit
    datarowstart = 4
    datarowend = 15
    For i = datarowstart To datarowend
    If Cells(i, 3) > 0 Then
        Cells(i, 3).Interior.Color = vbGreen
    ElseIf Cells(i, 3) < 0 Then
        Cells(i, 3).Interior.Color = vbRed
    Else: Cells(i, 3).Interior.Color = xlNone
    End If
    Next i
    
    
    
    
End Sub
